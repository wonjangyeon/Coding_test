- 생각의 흐름
1. 입력된 수를 k진수로 변환하여 string 형태로 pasing 함수로 넘긴다
2. 받은 string을 각각 소수 판별함수에 넣어 true 이면 count++해준다

#include <string>
#include <cmath>

using namespace std;

typedef long long ll; // 크기가 충분히 클 수 있기 때문에 long long으로 지정
// 소수 판별 함수
bool prime(ll n) {
    if(n < 2) return false;
        
    for(int i=2; i<=sqrt(n); ++i) {
        if(n % i == 0) return false;
    }
    
    return true;
}
// k 진수로 변환하는 함수
string convert_num(int n, int k) {
    string ret = "";
    
    while(n) {
        ret += to_string(n % k);
        n /= k;
    }
    
    return string(ret.rbegin(), ret.rend());
}
// k진수로 변환된 string 값을 0을 기준으로 parsing하는 함수
int get_answer(string num) { 
    string tmp = "";
    int ret = 0;
    
    for(int i=0; i<num.length(); ++i) {
        if(num[i] == '0' && !tmp.empty()) {
            ll n = stoll(tmp);
            if(prime(n)) ret++;
            tmp = "";
        }
        else tmp += num[i];
    }
    
    if(!tmp.empty()) {
        ll n = stoll(tmp);
        if(prime(n)) ret++;
    }
    
    return ret;
}

int solution(int n, int k) {
    int answer = 0;
    
    string num = convert_num(n, k);
    
    return get_answer(num);
}
